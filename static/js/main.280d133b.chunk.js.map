{"version":3,"sources":["constants/Constants.js","utils/Utils.js","context/AppContext.js","components/LandingCards/LandingCards.js","components/TabsSection/TabsSection.js","pages/LandingPage/LandingPage.js","components/Questions/Questions.js","pages/QuestionsPage/QuestionsPage.js","pages/NotFoundPage/NotFoundPage.js","components/NavBar/NavBar.js","components/Footer/Footer.js","App.js","index.js"],"names":["baseURL","sortExamStreams","exams","streams","forEach","stream","exam","index","_id","push","AppContext","createContext","AppContextProvider","props","getExamInfo","a","axios","get","data","console","log","getRandomQuestion","examId","body","api_key","api_secret","post","question","getParticularQuestion","questionId","Provider","value","children","useStyles","makeStyles","theme","card","height","display","flexDirection","cardMedia","paddingTop","cardContent","flexGrow","LandingCards","title","logo","classes","Card","style","cursor","className","CardMedia","image","img","padding","CardContent","Typography","gutterBottom","variant","align","TabPanel","other","role","hidden","id","aria-labelledby","Box","p","component","root","width","backgroundColor","palette","background","paper","TabSection","React","useState","setValue","AppBar","position","color","Tabs","onChange","event","newValue","indicatorColor","textColor","scrollButtons","aria-label","map","Tab","key","label","name","a11yProps","Grid","container","spacing","item","xs","sm","textDecoration","to","icon","marginRight","heroContent","heroButtons","marginTop","cardGrid","paddingBottom","LandingPage","useContext","sortedExamData","setSortedExamData","useEffect","examData","Fragment","Container","maxWidth","paragraph","justify","Button","href","questionText","optionStyles","grey","questionHeader","alignItems","justifyContent","questionInfo","questionNo","fontSize","markings","correct","wrong","contextImg","margin","textAlign","Questions","context","questions","q","uuidv4","testName","test","marking","incorrect","Divider","images","src","alt","length","options","option","paperStyles","chipStyle","navButtons","QuestionsPage","match","setQuestion","previousQuestion","setPreviousQuestions","getNewRandomQuestion","apiCall","type","params","questionNew","getAParticularQuestion","prevQues","pop","Paper","elevation","Chip","disabled","onClick","NotFoundPage","NavBar","CssBaseline","Toolbar","noWrap","footer","Footer","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.280d133b.chunk.js","sourcesContent":["export const baseURL = \"https://www.exambazaar.com/api/coding-round/routes/\"\r\nexport const api_key = 7568322716\r\nexport const api_secret = \"5ef59a7a76840a377e83f1a6\"","//this file provides all utility functions\r\n\r\n//this function provides a custom objext in which the exams are sorted in their stream\r\nexport const sortExamStreams = (exams, streams) => {\r\n    //foreach stream\r\n    streams.forEach(stream => {\r\n        //add a new field [\"exams\"] onto the stream and init it as []\r\n        stream[\"exams\"] = []\r\n        //traverse through the exam array and check stream.id === exam.id\r\n        exams.forEach((exam, index) => {\r\n            if (stream._id === exam.stream) {\r\n                //if the id matches push the exam onto the stream\r\n                stream[\"exams\"].push(exam)\r\n            }\r\n        })\r\n    })\r\n    //return the modified streams\r\n    return streams\r\n} ","//this file provides all the api request call as well as maintains app state\r\nimport React, { createContext } from 'react'\r\n//import axios to make api calls\r\nimport axios from 'axios'\r\n//import constants\r\nimport { api_key, api_secret, baseURL } from '../constants/Constants'\r\n//import utility functions\r\nimport { sortExamStreams } from '../utils/Utils'\r\n//initial state\r\nconst initState = {}\r\n//create global context\r\nexport const AppContext = createContext(initState)\r\n//create global context provider\r\nexport const AppContextProvider = (props) => {\r\n    //api calls\r\n\r\n    //this will get the exam info\r\n    //GET//baseURL/exam-info/:api-key\r\n    const getExamInfo = async () => {\r\n        try {\r\n            //destructure the data\r\n            const { data: { data } } = await axios.get(`${baseURL}/exam-info/${api_key}`)\r\n            //destructure the exams and streams\r\n            const { exams, streams } = data\r\n            //use the utility function to sort the data\r\n            return sortExamStreams(exams, streams)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    //this will get the exam info\r\n    //generate a new random question\r\n    //POST//baseURL/random-question/\r\n    const getRandomQuestion = async (examId) => {\r\n        try {\r\n            //set the body params\r\n            const body = {\r\n                api_key,\r\n                api_secret,\r\n                examId\r\n            }\r\n            //destructure the data\r\n            const { data: { data } } = await axios.post(`${baseURL}/random-question`, body)\r\n            //destructure the question\r\n            const { question } = data\r\n            return question;\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    //this will provide a particular question\r\n    //POST//baseURL/random-question/\r\n    const getParticularQuestion = async (examId, questionId) => {\r\n        try {\r\n            //set the body params\r\n            const body = {\r\n                api_key,\r\n                api_secret,\r\n                examId,\r\n                questionId\r\n            }\r\n            //destructure the data\r\n            const { data: { data } } = await axios.post(`${baseURL}/random-question`, body)\r\n            //destructure the question\r\n            const { question } = data\r\n            return question;\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    return (\r\n        //provide all the necessary values\r\n        <AppContext.Provider value={{ getExamInfo, getRandomQuestion, getParticularQuestion }}>\r\n            {props.children}\r\n        </AppContext.Provider>\r\n    )\r\n}","import React from 'react'\r\n\r\n//imports from material ui\r\nimport { Card, CardMedia, CardContent, Typography } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n//material-ui styles\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n        paddingTop: '56.25%', // 16:9,\r\n    },\r\n    cardContent: {\r\n        flexGrow: 1,\r\n    },\r\n}))\r\n\r\nconst LandingCards = ({ title, logo }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Card style={{ cursor: \"pointer\" }} className={classes.card}>\r\n            <CardMedia\r\n                className={classes.cardMedia}\r\n                image={logo}\r\n                img={{ padding: '5px' }}\r\n                title=\"stream card\"\r\n            />\r\n            <CardContent className={classes.cardContent}>\r\n                <Typography gutterBottom variant=\"h6\" align=\"center\">\r\n                    {title}\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default LandingCards;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n//imports for material-ui\r\nimport { AppBar, Tabs, Tab, Typography, Box, Grid } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n//components import\r\nimport LandingCards from '../LandingCards/LandingCards'\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`scrollable-auto-tabpanel-${index}`}\r\n            aria-labelledby={`scrollable-auto-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography component={'span'}>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `scrollable-auto-tab-${index}`,\r\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\n\r\nexport default function TabSection({ data }) {\r\n    const classes = useStyles();\r\n    //set the tab 0 initally\r\n    const [value, setValue] = React.useState(0);\r\n    //handle change of tab\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" color=\"default\">\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    variant=\"scrollable\"\r\n                    scrollButtons=\"auto\"\r\n                    aria-label=\"streams\"\r\n                >\r\n                    {/* this sets the stream tabs on the page */}\r\n                    {data.map((stream, index) => (\r\n                        <Tab key={stream._id} label={stream.name} {...a11yProps(index)} />\r\n                    ))}\r\n                </Tabs>\r\n            </AppBar>\r\n            {/* this sets the content of each stream tab */}\r\n            {data.map((stream, index) => (\r\n                <TabPanel key={stream._id} value={value} index={index}>\r\n                    <Grid container spacing={4}>\r\n                        {/* this maps all the exams for a particular stream */}\r\n                        {stream.exams.map((exam) => (\r\n                            <Grid item key={exam._id} xs={6} sm={3}>\r\n                                {/* setup a link to questions page passing the id */}\r\n                                <Link style={{ textDecoration: \"none\", color: \"black\" }} to={`exambazzar/questions/${exam._id}`}>\r\n                                    <LandingCards title={exam.name} logo={exam.logo} />\r\n                                </Link>\r\n                            </Grid>\r\n                        ))}\r\n                    </Grid>\r\n                </TabPanel>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react';\r\n//import context\r\nimport { AppContext } from '../../context/AppContext'\r\n//imports from material ui\r\nimport { Button, Grid, Typography, Container } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n//component import \r\nimport TabSection from '../../components/TabsSection/TabsSection'\r\n\r\n//material ui styles\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    heroContent: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(8, 0, 6),\r\n    },\r\n    heroButtons: {\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    cardGrid: {\r\n        paddingTop: theme.spacing(8),\r\n        paddingBottom: theme.spacing(8),\r\n    }\r\n}));\r\n\r\nconst LandingPage = () => {\r\n    //get the required data and functions from App context\r\n    const { getExamInfo } = useContext(AppContext)\r\n\r\n    //inital state\r\n    const [sortedExamData, setSortedExamData] = useState([])\r\n\r\n    //side effect (on the first call)\r\n    useEffect(() => {\r\n        const examData = async () => {\r\n            //sets the state\r\n            setSortedExamData(await getExamInfo())\r\n        }\r\n        //calls the function\r\n        examData()\r\n    }, [])\r\n\r\n    //classes for material ui styling\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <main>\r\n                {/* Hero unit */}\r\n                <div className={classes.heroContent}>\r\n                    <Container maxWidth=\"sm\">\r\n                        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n                            We at ExamBazaar\r\n            </Typography>\r\n                        <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\r\n                            Bring Exam prepration at your doorsteps.\r\n                        </Typography>\r\n                        <div className={classes.heroButtons}>\r\n                            <Grid container spacing={2} justify=\"center\">\r\n                                <Grid item>\r\n                                    <Button variant=\"contained\" color=\"primary\">\r\n                                        <a style={{ textDecoration: \"none\", color: \"inherit\" }} href=\"#streams\">Checkout Streams</a>\r\n                                    </Button>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                        </div>\r\n                    </Container>\r\n                </div>\r\n                <Container id=\"streams\" maxWidth=\"md\">\r\n                    <TabSection data={sortedExamData} />\r\n                </Container>\r\n            </main>\r\n            {/* Footer */}\r\n\r\n            {/* End footer */}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default LandingPage;","import React from 'react'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n//material ui imports\r\nimport { Typography, Grid, Divider } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { grey } from \"@material-ui/core/colors\";\r\n\r\n//styles\r\nconst useStyles = makeStyles(theme => ({\r\n    questionText: {\r\n        padding: \"20px\"\r\n    },\r\n    optionStyles: {\r\n        cursor: \"pointer\",\r\n        padding: \"10px\",\r\n        background: grey[100],\r\n        \"&:hover\": {\r\n            background: grey[200]\r\n        }\r\n    },\r\n    questionHeader: {\r\n        alignItems: \"center\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        padding: \"10px 0\"\r\n    },\r\n    questionInfo: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    },\r\n    questionNo: {\r\n        fontSize: \"1.2rem\"\r\n    },\r\n    markings: {\r\n        display: \"flex\"\r\n    },\r\n    correct: {\r\n        padding: \"10px\",\r\n        marginRight: \"5px\",\r\n        background: \"green\"\r\n    },\r\n    wrong: {\r\n        padding: \"10px\",\r\n        background: \"red\"\r\n    },\r\n    contextImg: {\r\n        margin: \"10px\",\r\n        textAlign: \"center\",\r\n\r\n    }\r\n}))\r\n\r\nconst Questions = ({ question }) => {\r\n    const classes = useStyles()\r\n    return (\r\n        <div>\r\n            {/* render the context if any */}\r\n            {question.context ? (<Typography\r\n                className={classes.questionText}\r\n                variant=\"h6\"\r\n                align=\"center\"\r\n                paragraph\r\n            >{question.context}</Typography>) : null}\r\n            {/* render all the questions */}\r\n            {question.questions ? question.questions.map((q, index) => (\r\n                <div key={uuidv4()}>\r\n                    {/* this is the question header */}\r\n                    <div className={classes.questionHeader}>\r\n                        <div className={classes.questionInfo}>\r\n                            <div className={classes.questionNo}>\r\n                                Question\r\n                            </div>\r\n                            <div className={classes.testName}>\r\n                                {question.test}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.markings}>\r\n                            <div className={classes.correct}>\r\n                                {/* check if marking is avilable */}\r\n                                {q.marking ? q.marking.correct : null}\r\n                            </div>\r\n                            <div className={classes.wrong}>\r\n                                {q.marking ? q.marking.incorrect : null}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <Divider />\r\n                    <Typography\r\n                        className={classes.questionText}\r\n                        variant=\"h6\"\r\n                        align=\"center\"\r\n                    >\r\n                        {/* render the question */}\r\n                        {q.question}\r\n                        {/* render the images if any */}\r\n                        {question.images ? question.images.map(image => (<div key={uuidv4()} className={classes.contextImg}><img src={image} alt=\"question-img\"/></div>)) : null}\r\n                        {q.images.length > 0 ?\r\n                            q.images.map(image => (<img src={image} alt=\"question-img\"/>))\r\n                            : null}\r\n                    </Typography>\r\n                    <div>\r\n                        <Grid container spacing={2} justify=\"center\">\r\n                            {/* render all the options of the question */}\r\n                            {q.options ? q.options.map(option => (\r\n                                <Grid key={uuidv4()} xs={12} item>\r\n                                    <div className={classes.optionStyles}>{option.option}</div>\r\n                                </Grid>\r\n                            )) : null}\r\n                        </Grid>\r\n                    </div>\r\n                </div>\r\n            )) : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Questions;","//this is the questions page\r\nimport React, { useState, useEffect, useContext } from 'react'\r\n\r\nimport \"./QuestionsPage.module.css\"\r\n\r\nimport {\r\n    Container, Paper, Chip, Divider\r\n} from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { grey } from \"@material-ui/core/colors\";\r\n\r\n//import AppContext\r\nimport { AppContext } from '../../context/AppContext'\r\n\r\nimport Questions from '../../components/Questions/Questions'\r\n\r\n//material ui styles\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    heroContent: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(8, 0, 6),\r\n    },\r\n    heroButtons: {\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    cardGrid: {\r\n        paddingTop: theme.spacing(8),\r\n        paddingBottom: theme.spacing(8),\r\n    },\r\n    paperStyles: {\r\n        padding: \"20px\"\r\n    },\r\n    chipStyle: {\r\n        cursor: \"pointer\",\r\n        margin: \"10px 5px\",\r\n        background: grey[500],\r\n        color: \"white\"\r\n    },\r\n    navButtons: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n\r\n}));\r\n\r\n//component //match.params.examId gives the exam id from the url\r\nconst QuestionsPage = ({ match }) => {\r\n    //get the api call function from context\r\n    const { getRandomQuestion, getParticularQuestion } = useContext(AppContext)\r\n    //this will store the present question\r\n    const [question, setQuestion] = useState({});\r\n    //this will store the array of previous questions._id\r\n    const [previousQuestion, setPreviousQuestions] = useState([])\r\n    //material ui styles \r\n    const classes = useStyles()\r\n    useEffect(() => {\r\n        //pass the exam id into the api call for random question\r\n        const apiCall = async () => {\r\n            await getNewRandomQuestion()\r\n        }\r\n        apiCall()\r\n    }, [])\r\n    const getNewRandomQuestion = async (type) => {\r\n        try {\r\n            if (type === \"next\") {\r\n                setPreviousQuestions([...previousQuestion, question._id])\r\n            }\r\n            const questionNew = await getRandomQuestion(match.params.examId)\r\n            setQuestion(questionNew)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    const getAParticularQuestion = async () => {\r\n        try {\r\n            let questionId = null;\r\n            if (previousQuestion.length > 0) {\r\n                const prevQues = [...previousQuestion]\r\n                questionId = prevQues.pop()\r\n                setPreviousQuestions(prevQues)\r\n                const questionNew = await getParticularQuestion(match.params.examId, questionId)\r\n                setQuestion(questionNew)\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    return (\r\n        //check if question is loaded\r\n        question ?\r\n            (<div className={classes.heroContent}>\r\n                <Container maxWidth=\"md\">\r\n                    <Paper className={classes.paperStyles} elevation={5}>\r\n                        <div className={classes.navButtons}>\r\n                            <Chip disabled={previousQuestion.length <= 0} className={classes.chipStyle} label=\"< Previous\" onClick={() => getAParticularQuestion()} />\r\n                            <Chip className={classes.chipStyle} label={question.exam} />\r\n                            <Chip className={classes.chipStyle} onClick={() => getNewRandomQuestion(\"next\")} label=\"Next >\" />\r\n                        </div>\r\n                        <Divider />\r\n                        <Questions question={question} />\r\n                    </Paper>\r\n                </Container>\r\n            </div>)\r\n            : \"loading...\"\r\n    )\r\n}\r\n\r\nexport default QuestionsPage;","import React from 'react'\r\nimport \"./NotFoundPage.module.css\"\r\nconst NotFoundPage = () => {\r\n    return (\r\n        <div>\r\n            not found\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default NotFoundPage","import React from 'react'\r\nimport { CssBaseline, AppBar, Toolbar, Typography } from '@material-ui/core'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <AppBar position=\"relative\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                        <Link style={{ textDecoration: \"none\", color: \"inherit\" }} to=\"/exambazzar\">Exambazaar</Link>\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NavBar;","import React from 'react'\r\nimport { Typography } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    footer: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(6),\r\n    },\r\n}))\r\n\r\nconst Footer = () => {\r\n    const classes = useStyles()\r\n    return (\r\n        <footer className={classes.footer}>\r\n            <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n                ExamBazaar\r\n        </Typography>\r\n            <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\r\n                © 2020-2021\r\n        </Typography>\r\n\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\n//import context provider\nimport { AppContextProvider } from './context/AppContext'\n//import css\nimport './App.module.css';\n//import the pages\nimport LandingPage from './pages/LandingPage/LandingPage';\nimport QuestionsPage from './pages/QuestionsPage/QuestionsPage';\nimport NotFoundPage from './pages/NotFoundPage/NotFoundPage'\n//import components\nimport NavBar from './components/NavBar/NavBar'\nimport Footer from './components/Footer/Footer'\n//import react-router\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    //providing context to the app\n    <AppContextProvider>\n      {/* base router */}\n      <Router>\n        <NavBar />\n        <Switch>\n          {/* home page route */}\n          <Route exact path=\"/exambazzar\" component={LandingPage} />\n          {/* questions route */}\n          <Route exact path=\"/exambazzar/questions/:examId\" component={QuestionsPage} />\n          {/* 404 route */}\n          <Route component={NotFoundPage} />\n        </Switch>\n      </Router>\n      <Footer />\n    </AppContextProvider >\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}